{"version":3,"file":"static/js/668.c35c98e1.chunk.js","mappings":"8KAGA,MAAMA,EAAgBC,GACP,mEACDC,KAAKD,IAAyB,IAAhBA,EAAKE,OAG3BC,EAAW,CACb,kBACA,kBACA,kBACA,kBACA,mBAqBEC,EAAYC,IAAsB,IAArB,YAAEC,GAAaD,EAC9B,MAGOE,EAAKC,IAAcC,EAAAA,EAAAA,UAAS,IAC5BC,EAASC,IAAiBF,EAAAA,EAAAA,UAASN,EAASI,KAC5CK,EAAMC,IAAcJ,EAAAA,EAAAA,UAAS,IAC7BK,EAAUC,IAAeN,EAAAA,EAAAA,WAAS,GAuBzC,MAhDgBO,EAACC,EAAUC,KAC3B,MAAMC,GAAgBC,EAAAA,EAAAA,WAEtBC,EAAAA,EAAAA,YAAU,KACRF,EAAcG,QAAUL,CAAQ,GAC/B,CAACA,KAEJI,EAAAA,EAAAA,YAAU,KACR,GAAIH,EAAO,CACT,MAAMK,EAAKC,aAAY,KACrBL,EAAcG,SAAS,GACtBJ,GACH,MAAO,IAAMO,cAAcF,EAC7B,CACA,MAAO,MAAQ,GACd,CAACL,GAAO,EAYXF,EAAY,KACV,IAAIU,EAASnB,EACToB,EAAUf,EACVA,EAXO,IAWQT,EAASI,GAAKL,SAC/BwB,GAAU,EACVC,EAAU,GAERD,IAAWvB,EAASD,OAClBI,GACFE,EAAW,GACXK,EAAW,IAEXE,GAAY,IAGdJ,EAAcR,EAASuB,GAAQE,MAAM,EAAGD,IACxCnB,EAAWkB,GACXb,EAAWc,EAAU,GACvB,GACCb,EA1BW,GA0BQ,OAGpBe,EAAAA,EAAAA,KAAA,OACEC,UAAU,mBACVC,MAAOhC,EAAaW,GAAW,CAAC,EAAI,CAAEsB,MAAO,OAC7CC,aAAcA,IAAMlB,GAAY,GAChCmB,aAAcA,IAAO3B,EAAMJ,EAASD,QAAWa,GAAY,GAAMoB,UAEjEC,EAAAA,EAAAA,MAAA,KAAGC,KAAMtC,EAAaW,GAAQ,UAAA4B,OAAa5B,EAAO,kBAAmB,GAAGyB,SAAA,EACtEN,EAAAA,EAAAA,KAAA,QAAAM,SAAOzB,KACPmB,EAAAA,EAAAA,KAAA,QAAAM,SAAM,mBAEJ,EAIZ/B,EAAUmC,aAAe,CACrBjC,aAAa,GAOjB,U,aChFA,MAsBA,EAtBgBkC,KAERX,EAAAA,EAAAA,KAACY,EAAAA,EAAI,CACDC,MAAM,UACNC,YAAY,6DAA4DR,UAExEC,EAAAA,EAAAA,MAAA,WAASN,UAAU,OAAOP,GAAG,UAASY,SAAA,EAClCN,EAAAA,EAAAA,KAAA,UAAAM,UACIN,EAAAA,EAAAA,KAAA,OAAKC,UAAU,QAAOK,UAClBN,EAAAA,EAAAA,KAAA,MAAAM,UAAIN,EAAAA,EAAAA,KAACe,EAAAA,GAAI,CAACC,GAAG,WAAUV,SAAC,mBAGhCC,EAAAA,EAAAA,MAAA,OAAKN,UAAU,WAAUK,SAAA,EACrBN,EAAAA,EAAAA,KAAA,KAAAM,SAAG,sDACHN,EAAAA,EAAAA,KAACzB,EAAS,QAEdyB,EAAAA,EAAAA,KAACiB,EAAAA,EAAY,Q","sources":["components/contact/EmailLink.js","pages/Contact.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\n\nconst validateText = (text) => {\n    const re = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))$/;\n    return re.test(text) || text.length === 0;\n};\n\nconst messages = [\n    'shakibahmed4352',\n    'shakibahmed4352',\n    'shakibahmed4352',\n    'shakibahmed4352',\n    'shakibahmed4352',\n]\n\nconst useInterval = (callback, delay) => {\n    const savedCallback = useRef();\n  \n    useEffect(() => {\n      savedCallback.current = callback;\n    }, [callback]);\n  \n    useEffect(() => {\n      if (delay) {\n        const id = setInterval(() => {\n          savedCallback.current();\n        }, delay);\n        return () => clearInterval(id);\n      }\n      return () => {}; // pass linter\n    }, [delay]);\n};\n\nconst EmailLink = ({ loopMessage }) => {\n    const hold = 50; // ticks to wait after message is complete before rendering next message\n    const delay = 50; // tick length in mS\n  \n    const [idx, updateIter] = useState(0); // points to current message\n    const [message, updateMessage] = useState(messages[idx]);\n    const [char, updateChar] = useState(0); // points to current char\n    const [isActive, setIsActive] = useState(true); // disable when all messages are printed\n  \n    useInterval(() => {\n      let newIdx = idx;\n      let newChar = char;\n      if (char - hold >= messages[idx].length) {\n        newIdx += 1;\n        newChar = 0;\n      }\n      if (newIdx === messages.length) {\n        if (loopMessage) {\n          updateIter(0);\n          updateChar(0);\n        } else {\n          setIsActive(false);\n        }\n      } else {\n        updateMessage(messages[newIdx].slice(0, newChar));\n        updateIter(newIdx);\n        updateChar(newChar + 1);\n      }\n    }, isActive ? delay : null);\n  \n    return (\n      <div\n        className=\"inline-container\"\n        style={validateText(message) ? {} : { color: 'red' }}\n        onMouseEnter={() => setIsActive(false)}\n        onMouseLeave={() => (idx < messages.length) && setIsActive(true)}\n      >\n        <a href={validateText(message) ? `mailto:${message}@mldangelo.com` : ''}>\n          <span>{message}</span>\n          <span>@gmail.com</span>\n        </a>\n      </div>\n    );\n};\n\nEmailLink.defaultProps = {\n    loopMessage: false,\n};\n\nEmailLink.propTypes = {\n    loopMessage: PropTypes.bool,\n};\n\nexport default EmailLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Main from '../layouts/Main';\nimport EmailLink from '../components/contact/EmailLink';\nimport ContactIcons from '../components/contact/ContactIcons';\n\nconst Contact = () => {\n    return (\n        <Main\n            title='Contact'\n            description=\"Contact Shakib Ahmed via email @ shakibahmed4352@gmail.com\"\n        >\n            <article className='post' id='contact'>\n                <header>\n                    <div className='title'>\n                        <h2><Link to='/contact'>Contact</Link></h2>\n                    </div>\n                </header>\n                <div className='email-at'>\n                    <p>Feel free to get in touch. You can email me at: </p>\n                    <EmailLink />\n                </div>\n                <ContactIcons />\n            </article>\n        </Main>\n    );\n};\n\nexport default Contact;"],"names":["validateText","text","test","length","messages","EmailLink","_ref","loopMessage","idx","updateIter","useState","message","updateMessage","char","updateChar","isActive","setIsActive","useInterval","callback","delay","savedCallback","useRef","useEffect","current","id","setInterval","clearInterval","newIdx","newChar","slice","_jsx","className","style","color","onMouseEnter","onMouseLeave","children","_jsxs","href","concat","defaultProps","Contact","Main","title","description","Link","to","ContactIcons"],"sourceRoot":""}